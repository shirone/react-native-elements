// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FeaturedTitle component should render without issues 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    style={
        Array [
            Object {
              "backgroundColor": "#444",
              "borderRadius": 20,
              "padding": 12,
              "paddingBottom": 3,
              "paddingTop": 3,
              "position": "absolute",
              "right": 30,
              "top": 2,
            },
            undefined,
          ]
    }
>
    <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
            Array [
                Object {
                  "color": "white",
                  "fontSize": 14,
                },
                undefined,
              ]
        }
    >
        3
    </Text>
</View>,
  "nodes": Array [
    <View
      style={
            Array [
                  Object {
                    "backgroundColor": "#444",
                    "borderRadius": 20,
                    "padding": 12,
                    "paddingBottom": 3,
                    "paddingTop": 3,
                    "position": "absolute",
                    "right": 30,
                    "top": 2,
                  },
                  undefined,
                ]
      }
>
      <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
                  Array [
                        Object {
                          "color": "white",
                          "fontSize": 14,
                        },
                        undefined,
                      ]
            }
      >
            3
      </Text>
</View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Badge
        badge={
                Object {
                        "value": 3,
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "badge": Object {
            "value": 3,
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          style={
                    Array [
                              Object {
                                "backgroundColor": "#444",
                                "borderRadius": 20,
                                "padding": 12,
                                "paddingBottom": 3,
                                "paddingTop": 3,
                                "position": "absolute",
                                "right": 30,
                                "top": 2,
                              },
                              undefined,
                            ]
          }
>
          <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                              Array [
                                        Object {
                                          "color": "white",
                                          "fontSize": 14,
                                        },
                                        undefined,
                                      ]
                    }
          >
                    3
          </Text>
</View>,
        "_debugID": 2,
        "_renderedOutput": <View
          style={
                    Array [
                              Object {
                                "backgroundColor": "#444",
                                "borderRadius": 20,
                                "padding": 12,
                                "paddingBottom": 3,
                                "paddingTop": 3,
                                "position": "absolute",
                                "right": 30,
                                "top": 2,
                              },
                              undefined,
                            ]
          }
>
          <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                              Array [
                                        Object {
                                          "color": "white",
                                          "fontSize": 14,
                                        },
                                        undefined,
                                      ]
                    }
          >
                    3
          </Text>
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Badge
    badge={
        Object {
            "value": 3,
          }
    }
/>,
}
`;
